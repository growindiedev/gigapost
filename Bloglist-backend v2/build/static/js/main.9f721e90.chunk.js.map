{"version":3,"sources":["services/blogs.js","reducers/blogReducer.js","components/LoginForm.js","components/Notification.js","reducers/notificationReducer.js","services/login.js","services/users.js","reducers/loginReducer.js","components/LoginPage.js","components/Togglable.js","components/BlogForm.js","components/Blog.js","components/HomePage.js","components/UsersPage.js","components/User.js","components/Comment.js","components/CommentForm.js","components/BlogView.js","components/RegisterForm.js","components/RegisterPage.js","reducers/userReducer.js","components/Navbar.js","App.js","store.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","id","put","deleteBlog","delete","setToken","newToken","addComment","comment","createBlog","user","dispatch","blogService","newBlog","name","type","likeBlog","likedBlog","removeBlog","blogReducer","state","action","console","log","find","blog","updatedBlog","likes","map","filter","postId","title","newComment","comments","LoginForm","handleLogin","formik","useFormik","initialValues","username","password","onSubmit","values","resetForm","err","error","handleSubmit","spacing","bg","w","p","boxShadow","rounded","animation","satisfied","size","strokeColor","isRequired","children","placeholder","area-label","onChange","handleChange","value","aria-label","_hover","_active","width","fontSize","textAlign","color","Notification","props","message","useSelector","notification","status","variant","padding","borderRadius","initialState","setNotification","delay","setTimeout","removeNotification","notificationReducer","clearTimeout","login","credentials","registerUser","loggedInUserJSON","JSON","parse","window","localStorage","getItem","loginService","userService","loginReducer","LoginPage","useDispatch","history","useHistory","push","justify","align","h","mb","Togglable","forwardRef","ref","btnText","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","onClick","style","displayName","BlogForm","author","content","url","Blog","rest","shadow","borderWidth","bgGradient","to","fontWeight","mt","HomePage","blogs","blogFormRef","React","createRef","addBlog","blogObject","current","py","textColor","sort","b","key","UsersPage","users","mx","length","User","match","useRouteMatch","params","Comment","items","colorScheme","Math","floor","random","fontStyle","CommentForm","blogId","createComment","BlogView","addLike","confirm","overflow","px","borderColor","as","target","href","cursor","GrLike","pt","pb","BsFillChatSquareQuoteFill","m","RegisterForm","handleRegister","confirmPassword","RegisterPage","userReducer","Navbar","handleLogout","removeItem","src","alt","alignItems","mr","border","App","useEffect","setItem","stringify","path","component","exact","render","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9f721e90.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst deleteBlog = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nconst addComment = async (id, comment) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(\n    `${baseUrl}/${id}/comments`,\n    comment,\n    config,\n  )\n  return response.data\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n  deleteBlog,\n  setToken,\n  addComment,\n}\n","import blogService from '../services/blogs'\n\nconst blogReducer = (state = [], action) => {\n  console.log('state now: ', state)\n  console.log('action', action)\n\n  switch (action.type) {\n    case 'INIT_BLOGS':\n      return action.data\n    case 'NEW_BLOG': {\n      return [...state, action.data]\n    }\n    case 'LIKE_BLOG': {\n      const { id } = action.data\n\n      const likedBlog = state.find((blog) => blog.id === id)\n      const updatedBlog = {\n        ...likedBlog,\n        likes: likedBlog.likes + 1,\n      }\n\n      return state.map((blog) => (blog.id !== id ? blog : updatedBlog))\n    }\n    case 'DELETE_BLOG': {\n      const { id } = action.data\n      return state.filter((blog) => blog.id !== id)\n    }\n    case 'NEW_COMMENT': {\n      const { id } = action.data\n      const { postId } = action.data\n      const { title } = action.data\n\n      const blog = state.find((blog) => blog.id === postId)\n      const newComment = { title, id }\n\n      const updatedBlog = {\n        ...blog,\n        comments: [...blog.comments, newComment],\n      }\n\n      return state.map((blog) => (blog.id !== postId ? blog : updatedBlog))\n    }\n    default:\n      return state\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async (dispatch) => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs,\n    })\n  }\n}\n\nexport const createBlog = (data, user) => {\n  return async (dispatch) => {\n    let newBlog = await blogService.create(data)\n    newBlog = { ...newBlog, user: { name: user.name } }\n    dispatch({\n      type: 'NEW_BLOG',\n      data: newBlog,\n    })\n  }\n}\n\nexport const likeBlog = (id, likedBlog) => {\n  return async (dispatch) => {\n    await blogService.update(id, likedBlog)\n    dispatch({\n      type: 'LIKE_BLOG',\n      data: { id },\n    })\n  }\n}\n\nexport const removeBlog = (id) => {\n  return async (dispatch) => {\n    await blogService.deleteBlog(id)\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: { id },\n    })\n  }\n}\n\nexport const createComment = (id, comment) => {\n  return async (dispatch) => {\n    const postId = id\n    let newComment = await blogService.addComment(id, comment)\n    newComment = { ...newComment, postId }\n\n    dispatch({\n      type: 'NEW_COMMENT',\n      data: newComment,\n    })\n  }\n}\n\nexport default blogReducer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {useFormik} from 'formik'\nimport { BiUserCircle } from 'react-icons/bi'\nimport {FcLock} from 'react-icons/fc'\nimport UseAnimations from \"react-useanimations\";\nimport satisfied from 'react-useanimations/lib/loading2'\n\nimport {\n\tInput,\n\tStack,\n\tInputGroup,\n\tInputLeftElement,\n\tButton,\n\tFormControl,\n\tCenter,\n\tText,\n\t\n} from '@chakra-ui/react';\n\nconst LoginForm = ({handleLogin}) => {\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    onSubmit: (values, {resetForm}) => {\n      try {\n        handleLogin(values.username, values.password)\n        resetForm()\n      } catch (err) {\n        console.error(err)\n      }\n    },\n  });\n\n  return (\n\n    \n    <form onSubmit={formik.handleSubmit}>\n\t\t\t<Stack spacing={3} bg=\"gray.200\"\n\t\t\tw='350px'\n\t\t\tp={5}\n\t\t\tboxShadow='m'\n\t\t\trounded='lg'>\n\t\t\t\t\n\t\t\t\t<Center>\n\t\t\t\t<UseAnimations animation={satisfied}  size={50}  strokeColor=\"inherit\"/>\n\t\t\t\t</Center>\n\t\t\t\t<FormControl isRequired >\n\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t<InputLeftElement children={<BiUserCircle/>} />\n\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\ttype='text' name='username' \n\t\t\t\t\t\t\tplaceholder='username' \n\t\t\t\t\t\t\tarea-label='username' \n\t\t\t\t\t\t\tonChange={formik.handleChange} \n\t\t\t\t\t\t\tvalue={formik.values.username}\n\t\t\t\t\t\t\tbg='white'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t</FormControl>\n\t\t\t\t<FormControl isRequired >\n\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t<InputLeftElement children={<FcLock/>} />\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\t\t\taria-label='Password'\n              \t\t\t\tname='password'\n\t\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\t\tvalue={formik.values.password}\n\t\t\t\t\t\t\tbg='white'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t</FormControl>\n\t\t\t\t<Button\n\t\t\t\t\ttype='submit'\n\t\t\t\t\tboxShadow='sm'\n\t\t\t\t\t_hover={{ boxShadow: 'md' }}\n\t\t\t\t\t_active={{ boxShadow: 'lg' }}\n          \t\t\twidth=\"100\"\n\t\t\t\t\t>\n\t\t\t\t\tLogin\n\t\t\t\t</Button>\n\t\t\t\t<Text fontSize=\"sm\" textAlign=\"center\" color=\"gray.400\">Created by Jarryingnut 👨‍💻</Text>\n\t\t\t\t\n\t\t\t\t\n\t\t\t</Stack>\n\t\t</form>\n  )\n}\n\nexport default LoginForm\nLoginForm.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useSelector} from 'react-redux'\nimport {\n  Alert,\n  AlertIcon,\n} from \"@chakra-ui/react\"\n\nfunction Notification(props) {\n\n    const message = useSelector(state => state.notification)\n    if (!message || (!message?.notification && !message?.error)) return null\n\n    return (\n        <Alert status={message?.error ? 'error' : 'info'} {...props} variant=\"solid\" padding=\"1.5\" borderRadius=\"md\">\n        <AlertIcon />\n        {message?.notification ? message?.notification : message?.error}      \n        </Alert>\n    )\n    \n}\n\nexport default Notification\n\nNotification.propTypes = {\n    className: PropTypes.string,\n  }","const initialState = { notification: null }\n\nconst notificationReducer = (state = initialState, action) => {\n  console.log('state now: ', state)\n  console.log('action', action)\n\n  switch (action.type) {\n    case 'SET_MESSAGE': {\n      clearTimeout(state.delay)\n      return action.data.message\n    }\n    case 'REMOVE_MESSAGE':\n      return initialState\n    default:\n      return state\n  }\n}\n\nexport const setNotification = (message, delay) => {\n  return async (dispatch) => {\n    dispatch({\n      type: 'SET_MESSAGE',\n      data: {\n        message,\n        delay: setTimeout(() => {\n          dispatch(removeNotification())\n        }, delay * 1000),\n      },\n    })\n  }\n}\n\nexport const removeNotification = () => {\n  return {\n    type: 'REMOVE_MESSAGE',\n  }\n}\n\nexport default notificationReducer\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n}\n\nexport default {login: login}","import axios from 'axios'\nconst baseUrl = '/api/users'\n\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data\n  }\n\nconst registerUser = async (credentials) => {\n   const response = await axios.post(baseUrl, credentials)\n   return response.data\n}\n\nexport default {getAll, registerUser}","import loginService from '../services/login'\nimport userService from '../services/users'\n\nconst loggedInUserJSON = JSON.parse(\n  window.localStorage.getItem('loggedInBloglistUser'),\n)\n\nconst initialState = loggedInUserJSON ? loggedInUserJSON : null\n\nconst loginReducer = (state = initialState, action) => {\n  console.log('state now: ', state)\n  console.log('action', action)\n\n  switch (action.type) {\n    case 'LOGIN':\n      return action.data\n    case 'REGISTER_USER':\n      return action.data\n    case 'LOGOUT': {\n      return null\n    }\n    default:\n      return state\n  }\n}\n\nexport const login = (username, password) => {\n  return async (dispatch) => {\n    const user = await loginService.login({ username, password })\n    console.log({ user })\n    console.log('called')\n    dispatch({\n      type: 'LOGIN',\n      data: user,\n    })\n  }\n}\n\nexport const registerUser = (username, password, name) => {\n  return async (dispatch) => {\n    const user = await userService.registerUser({ username, password, name})\n    console.log({ user })\n    console.log('called')\n    dispatch({\n      type: 'REGISTER_USER',\n      data: user,\n    })\n  }\n}\n\nexport const logout = () => {\n  return {\n    type: 'LOGOUT',\n  }\n}\n\nexport default loginReducer\n","import React from 'react'\nimport LoginForm from './LoginForm'\nimport Notification from './Notification'\nimport { useDispatch } from 'react-redux'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { login } from '../reducers/loginReducer'\nimport { useHistory } from 'react-router-dom'\nimport {VStack, Heading} from '@chakra-ui/react'\n\n\nconst LoginPage = () => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const handleLogin = async (username, password) => {\n        if (!username || username === '' || !password || password === '') {\n          console.log('something went wrong')\n          dispatch(\n            setNotification({ error: 'Please fill in username and password' }, 5),\n          )\n          return\n        }\n    \n        try {\n          await dispatch(login(username, password))\n    \n          history.push('/')\n    \n          // set notification message\n          dispatch(\n            setNotification(\n              {\n                notification: `${username} succesfully logged in`,\n              },\n              5,\n            ),\n          )\n        } catch (err) {\n          // set error message\n          dispatch(\n            setNotification(\n              {\n                error: 'wrong username or password',\n              },\n              5,\n            ),\n          )\n\n          \n          console.error(err)\n        }\n      }\n\n    return (\n        <>  \t\t\t\t\n            <VStack justify='center' align='center' w='100%' h='93vh' spacing=\"3\" color=\"gray.600\">\n            <Heading mb=\"6\" size=\"lg\">Log in to Application</Heading>\n            <LoginForm handleLogin={handleLogin}/>\n            <Notification w=\"350px\"/>\n            </VStack>\n        </>\n    )\n}\n\nexport default LoginPage\n","import React, {useState, forwardRef, useImperativeHandle} from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Box, VStack } from '@chakra-ui/react';\n\nconst Togglable = forwardRef(({btnText, children}, ref) => {\n    const [visible, setVisible] = useState(false)\n\n    const hideWhenVisible = { display: visible ? 'none' : '' }\n    const showWhenVisible = { display: visible ? '' : 'none' }\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n      }\n    \n      useImperativeHandle(ref, () => {\n        return {\n          toggleVisibility,\n        }\n      })\n\n\n    return (\n        <VStack>\n            <Button onClick={toggleVisibility}\n            size=\"sm\" \n            _hover={{ boxShadow: 'md' }}\n            _active={{ boxShadow: 'lg' }}\n            borderRadius=\"sm\"\n             width=\"20\"\n            style={hideWhenVisible} >\n                {btnText}\n            </Button>\n\n            <Box style={showWhenVisible} >\n                {children}\n                <Button\n                onClick={toggleVisibility}\n                 size=\"sm\" \n                 _hover={{ boxShadow: 'md' }}\n\t\t\t\t_active={{ boxShadow: 'lg' }}\n                borderRadius=\"sm\"\n          \t\twidth=\"20\"\n                \n                  >\n                Cancel\n                </Button>\n            </Box>\n        </VStack>\n    )\n})\n\nTogglable.displayName = 'Togglable'\nexport default Togglable\n\nTogglable.propTypes = {\n    btnText: PropTypes.string.isRequired,\n    children: PropTypes.node,\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useFormik } from 'formik'\nimport {Input, Button, VStack, FormControl, InputGroup, InputLeftElement, Textarea} from '@chakra-ui/react'\nimport { MdFindInPage } from 'react-icons/md'\nimport { BsPersonLinesFill } from 'react-icons/bs'\nimport { FaPencilAlt } from 'react-icons/fa'\n\n\nconst BlogForm = ({createBlog}) => {\n\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      author: '',\n      content: '',\n      url: '',\n      likes: 0\n    },\n    onSubmit: (values, {resetForm}) => {\n      try {\n        const blog = {\n          title: values.title,\n          author: values.author,\n          content: values.content,\n          url: values.url,\n          likes: values.likes,\n        }\n        createBlog(blog)\n        resetForm()\n      } catch (err) {\n        console.error(err)\n      }\n    },\n  });\n\n  return (\n    \n    <form onSubmit={formik.handleSubmit}>\n      <VStack w=\"xl\"  spacing=\"2\" justify=\"left\" p=\"10\">\n      <FormControl isRequired >\n\t\t\t\t\t<InputGroup size=\"sm\">\n\t\t\t\t\t\t<InputLeftElement children={<FaPencilAlt/>} />\n            <Input \n              placeholder=\"Title\"\n              type=\"text\"\n              name=\"title\"\n              onChange={formik.handleChange}\n              value={formik.values.title}\n            />\n          </InputGroup>\n\t\t\t</FormControl>\n      <FormControl isRequired >\n\t\t\t\t\t<InputGroup size=\"sm\">\n\t\t\t\t\t\t<InputLeftElement children={<BsPersonLinesFill/>} />\n            <Input \n              placeholder=\"Author\"\n              type=\"text\"\n              name=\"author\"\n              onChange={formik.handleChange}\n              value={formik.values.author}\n            />\n          </InputGroup>\n\t\t\t</FormControl>\n      <FormControl isRequired >\n\t\t\t\t\t<InputGroup size=\"sm\">\n            <Textarea \n              placeholder=\"📝 Content\"\n              type=\"text\"\n              name=\"content\"\n              onChange={formik.handleChange}\n              value={formik.values.content}\n            />\n          </InputGroup>\n\t\t\t</FormControl>\n      <FormControl isRequired >\n\t\t\t\t\t<InputGroup size=\"sm\">\n\t\t\t\t\t\t<InputLeftElement children={<MdFindInPage/>} />\n            <Input \n              placeholder=\"URL\"\n              type=\"text\"\n              name=\"url\"\n              onChange={formik.handleChange}\n              value={formik.values.url}\n            />\n          </InputGroup>\n\t\t\t</FormControl>\n      <Button \n      type=\"submit\" \n      size='sm' \n      _hover={{ boxShadow: 'md' }}\n\t\t\t_active={{ boxShadow: 'lg' }}\n      borderRadius=\"sm\"\n      width=\"20\"\n      >\n        Create\n      </Button>\n      \n      </VStack>\n    </form>\n  )\n}\n\nexport default BlogForm\nBlogForm.propTypes = {\n  createBlog: PropTypes.func.isRequired,\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport {Box, Heading, Text } from '@chakra-ui/react'\r\nconst Blog = ({blog, ...rest}) => {\r\n  return (\r\n    <Box p={4} color=\"gray.600\" shadow=\"md\" borderWidth=\"2px\" width=\"xl\" {...rest} borderRadius=\"md\"  _hover={{bgGradient: \"linear(to-r, green.100, blue.100, gray.200)\"}}\r\n    >\r\n      <Link to={`/blogs/${blog.id}`}>\r\n      <Heading fontSize=\"l\" fontWeight=\"medium\">{blog.title}</Heading>        \r\n      <Box>\r\n          <Text mt={1.5} fontSize=\"sm\" color=\"gray.500\">{`Author: ${blog.author}`}</Text>\r\n      </Box>\r\n      </Link>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n\r\nBlog.propTypes = {\r\n  blog: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    author: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n    likes: PropTypes.number,\r\n  }),\r\n}","import React from 'react'\nimport Notification from './Notification'\nimport Togglable from './Togglable'\nimport BlogForm from './BlogForm'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { createBlog } from '../reducers/blogReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport Blog from './Blog'\nimport {VStack, Heading, Stack} from '@chakra-ui/react';\nimport UseAnimations from \"react-useanimations\";\nimport satisfied from 'react-useanimations/lib/loading2'\n\nconst HomePage = () => {\n    const blogs = useSelector(state => state.blogs)\n    const user = useSelector(state => state.login)\n    const dispatch = useDispatch()\n    const blogFormRef = React.createRef()\n\n\n    const addBlog = async (blogObject) => {\n    try { // hide form after adding a blog\n        blogFormRef.current.toggleVisibility()\n\n        // check if all required fields are filled in\n        if (!blogObject.title || !blogObject.author || !blogObject.url) {\n            dispatch(setNotification({ error: 'Please fill in all the fields' }, 5))\n            return\n        }\n\n        // Add new blog to db\n        dispatch(createBlog(blogObject, user))\n\n        //set notification message\n        dispatch(\n            setNotification(\n              {\n                notification: `A new blog ${blogObject.title} by ${blogObject.author} added`,\n              },\n              5,\n            ),\n          )\n        } catch (err){\n            // set error message\n            dispatch(\n                setNotification(\n                  {\n                    error: `No nooo! ${err}`,\n                  },\n                  5,\n                ),\n              )\n              console.error(err)\n        }   \n    }\n\n\n    return (\n        <VStack spacing=\"3\" p=\"10\">\n             <Notification w=\"xl\"/>\n             <Stack  align=\"flex-start\" justify=\"center\" w=\"xl\" py=\"5\" spacing=\"3\">\n\n            <Heading fontSize=\"xx-large\" textColor=\"gray.700\" p=\"1.5\"><UseAnimations animation={satisfied}  size={50}  strokeColor=\"inherit\"/>Gigapost</Heading>\n            <Togglable btnText=\"New Blog\" ref={blogFormRef} >\n            \n            <BlogForm createBlog={addBlog} />\n            </Togglable>\n            </Stack>\n            <VStack spacing=\"3\">\n               {blogs\n                .sort((a, b) => b.likes - a.likes)\n                .map((blog) => (\n                <Blog key={blog.id} blog={blog} />\n                ))} \n            </VStack>\n        </VStack>\n    )\n}\n\nexport default HomePage\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport {VStack, Box, Heading} from '@chakra-ui/react'\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    TableCaption,\n  } from \"@chakra-ui/react\"\n\nconst UsersPage = () => {\n    const users = useSelector(state => state.users)\n    return (\n        <VStack p=\"10\" mx=\"auto\" width=\"xl\" color=\"gray.600\">\n            <Heading size=\"lg\" p=\"4\" fontWeight=\"semibold\">Users</Heading>\n            <Box p={4} shadow=\"md\" borderWidth=\"1px\" width=\"lg\" borderRadius=\"md\" mx=\"auto\">                \n                <Table size=\"md\">\n                <TableCaption>Users and number of blogs created by them</TableCaption>\n                <Thead>\n                    <Tr>\n                    <Th>Username</Th>\n                    <Th>Blogs Created</Th>\n                    </Tr>\n                </Thead>\n                <Tbody>\n                {users?.map((user) => (\n                    <Tr  key={user?.id} color=\"gray.500\" _hover={{ color: 'blue.500', fontWeight: 'medium'}}>\n                        <Td ><Link to={`/users/${user.id}`}>{user?.username}</Link></Td>\n                        <Td >{user?.blogs?.length}</Td>\n                    </Tr>\n                ))}\n                </Tbody>\n                </Table>\n\n            </Box>\n        </VStack>\n    )\n}\n\nexport default UsersPage\n","import React from 'react'\nimport { useRouteMatch } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport {VStack, Heading} from '@chakra-ui/react'\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    TableCaption,\n  } from \"@chakra-ui/react\"\n\n\n\nconst User = () => {\n    const users = useSelector(state => state.users)\n    const match = useRouteMatch('/users/:id')\n    const user = match ? users?.find((user) => user.id === match.params.id) : null\n\n    if (!user) {\n        return null\n    }\n\n    return (\n        <VStack w=\"xl\"  padding=\"10\" spacing=\"5\" mx=\"auto\" color=\"gray.600\">\n            <Heading size=\"lg\">{user.name}</Heading>\n            \n\n                <Table size=\"sm\" >\n                <TableCaption>{`These are the blogs added by ${user.name}`}</TableCaption>\n                <Thead>\n                    <Tr>\n                    <Th>Added blogs</Th>\n                    </Tr>\n                </Thead>\n                <Tbody>\n                {user.blogs.length === 0 ? (\n                <Tr><Td>No blogs added yet.</Td></Tr>\n                ) : (\n                user.blogs?.map((blog) => (\n                    <Tr>\n                    <Td key={blog.id} fontSize=\"md\" >\n                    {blog.title}\n                    </Td>\n                    </Tr>\n                )))}\n                </Tbody>\n                </Table>\n        </VStack>\n    )\n}\n\nexport default User\n\n","import React from 'react'\nimport {Alert} from '@chakra-ui/react'\n\nconst Comment = (props) => {\n  const items = [\"blue\", \"cyan\", \"gray\", \"green\", \"orange\", \"pink\", \"purple\", \"red\", \"teal\", \"yellow\", \"blackAlpha\", \"linkedin\", \"facebook\", \"messenger\", \"whatsapp\", \"twitter\", \"telegram\"]\n\n  return <Alert {...props} colorScheme={items[Math.floor(Math.random() * items.length)]} fontStyle=\"oblique\">{props.comment.title || props.comment}</Alert>\n}\n\nexport default Comment","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useRouteMatch } from 'react-router-dom'\nimport { createComment } from '../reducers/blogReducer'\nimport {useFormik} from 'formik'\nimport {Input, Button, FormControl, InputGroup, InputLeftElement, HStack} from '@chakra-ui/react'\nimport {AiOutlineComment} from 'react-icons/ai'\nimport {BiCommentAdd} from 'react-icons/bi'\n\nconst CommentForm = () => {\n\n    const dispatch = useDispatch()\n    const blogs = useSelector((state) => state.blogs)\n    const match = useRouteMatch('/blogs/:id')\n    const blog = match ? blogs?.find((blog) => blog.id === match.params.id) : null\n\n    const formik = useFormik({\n        initialValues: {\n          comment: '',\n        },\n        onSubmit: (values, {resetForm}) => {\n            try {\n                  const comment = {\n                  title: values.comment,\n                }\n                const blogId = blog.id\n                dispatch(createComment(blogId, comment))\n                // reset input value\n                resetForm()\n              } catch (err) {\n                console.error(err)\n              }\n        },\n      });\n    \n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n          <HStack w=\"lg\">\n          <FormControl isRequired >\n                <InputGroup size=\"sm\">\n                  <InputLeftElement children={<AiOutlineComment/>} />\n                  <Input \n                    placeholder=\"comment\"\n                    type=\"text\"\n                    name=\"comment\"\n                    onChange={formik.handleChange}\n                    value={formik.values.comment}\n                  />\n                </InputGroup>\n            </FormControl>\n                     \n            <Button \n            type=\"submit\" \n            size='sm' \n            _hover={{ boxShadow: 'md' }}\n            _active={{ boxShadow: 'lg' }}\n            borderRadius=\"sm\"\n            bg=\"gray.200\"\n            > <BiCommentAdd/>\n            </Button>\n            </HStack>\n        </form>\n    )\n}\n\nexport default CommentForm\n\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useRouteMatch, useHistory } from 'react-router-dom'\nimport Comment from './Comment'\nimport { likeBlog, removeBlog } from '../reducers/blogReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport CommentForm from './CommentForm'\nimport { GrLike } from 'react-icons/gr'\nimport { BsFillChatSquareQuoteFill } from 'react-icons/bs'\nimport {VStack, Button, Icon, Heading, Text, HStack, Stack, Badge} from '@chakra-ui/react'\n\n\nconst BlogView = () => {\n  const blogs = useSelector((state) => state.blogs)\n  const user = useSelector((state) => state.login)\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const match = useRouteMatch('/blogs/:id')\n  const blog = match ? blogs.find((blog) => blog.id === match.params.id) : null\n\n  const addLike = async () => {\n      try {\n          const {id, author, content, url, title} = blog\n          const updatedBlog = {\n            user: blog.user?.id || blog.user,\n            likes: blog.likes + 1,\n            title,\n            content,\n            author,\n            url,\n          }\n\n          dispatch(likeBlog(id, updatedBlog))\n\n      } catch(err) {\n        console.error(err)\n        dispatch(\n          setNotification(\n            {\n              error: `No nooo! ${err}`,\n            },\n            5,\n          ),\n        )  \n      }\n  }\n\n  const deleteBlog = async (id, blog) => {\n    try {\n      if (window.confirm(`Remove ${blog.title} by ${blog.author}`)) {\n        // delete blog from db\n        dispatch(removeBlog(id))\n        history.push('/blogs')\n        dispatch(\n          setNotification(\n            {\n              notification: `Successfully removed ${blog.title} by ${blog.author}`,\n            },\n            5,\n          ),\n        )\n      }\n    } catch (err) {\n      console.error(err)\n      dispatch(setNotification({ error: `No nooo! ${err}` }, 5))\n    }\n  }\n\n  if(!blog) {\n      return null\n  }\n\n    return (\n        <VStack w=\"xl\" p=\"10\" mx=\"auto\" color=\"gray.600\">\n           <Stack w=\"xl\" borderWidth=\"2px\" borderRadius=\"md\" overflow=\"hidden\" py=\"5\" px=\"6\" spacing=\"2.5\"  boxShadow=\"md\" borderColor=\"gray.200\" >\n               <Heading size=\"lg\" >{blog.title}</Heading>\n               <Heading size=\"sm\" color=\"gray.500\">{blog.author}</Heading>\n               <Text textAlign=\"justify\" >{blog.content}</Text>\n               <Text as=\"a\" target=\"_\" href={`https://${blog.url}`} _hover={{ color: 'blue.300' }} color=\"blue.500\" fontSize=\"xl\" fontWeight=\"medium\">{blog.url}</Text>\n                <HStack spacing=\"2\" color=\"orange.500\" fontSize=\"sm\">\n                    \n                    <Text>Added by  <Badge colorScheme=\"orange\"> {`${blog.user?.name}`}</Badge></Text>\n                    \n                    <Text>&#8226;</Text>\n                    <Text fontWeight=\"medium\" color=\"orange.400\">{blog.likes}</Text>\n                    <Icon \n                    cursor=\"grab\"\n                    _active={{ boxShadow: 'lg' }}\n                    // width=\"20\"\n                    size=\"md\"\n                    as={GrLike}\n                    onClick={addLike}\n                    />\n                </HStack>\n                {blog.user?.username === user?.username && (\n                <Button \n                size='xs' \n                _hover={{ boxShadow: 'md', bg: \"red.200\" }}\n                _active={{ boxShadow: 'lg' }}\n                borderRadius=\"sm\"\n                width=\"20\"\n                onClick={() => deleteBlog(blog.id, blog)}\n                bg=\"red.200\"\n                p=\"3\"\n                >\n                Remove\n                </Button>\n                )}\n            </Stack> \n            <Heading size=\"sm\" pt=\"10\" pb=\"4\" fontWeight=\"semibold\" textAlign=\"left\" ><Icon as={BsFillChatSquareQuoteFill}/> Comments</Heading>\n            <CommentForm />\n            {blog.comments && blog.comments.length !== 0 ? (\n                <ul>\n                {blog.comments.map((comment) => (\n                    <Comment key={comment.id} comment={comment} p=\"1.5\" variant=\"left-accent\" w=\"lg\" m=\"2.5\" borderRadius=\"md\" size=\"sm\" fontSize=\"sm\"/>\n                ))}\n                </ul>\n            ) : (\n                <Comment comment='Add the first comment for this blog' p=\"1.4\" variant=\"solid\" w=\"lg\" m=\"2\" borderRadius=\"md\"/>\n            )}\n        </VStack>\n    )\n}\n\nexport default BlogView\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {useFormik} from 'formik'\nimport { BiUserCircle } from 'react-icons/bi'\nimport {FcLock} from 'react-icons/fc'\nimport {IoIosPersonAdd} from 'react-icons/io'\nimport UseAnimations from \"react-useanimations\";\nimport satisfied from 'react-useanimations/lib/loading2'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { useDispatch } from 'react-redux'\n\nimport {\n\tInput,\n\tStack,\n\tInputGroup,\n\tInputLeftElement,\n\tButton,\n\tFormControl,\n\tText,\n  Center\n} from '@chakra-ui/react';\n\nconst RegisterForm = ({handleRegister}) => {\n\n  const dispatch = useDispatch()\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      name: ''\n    },\n    onSubmit: (values, {resetForm}) => {\n      if (values.password !== values.confirmPassword) {\n        dispatch(\n            setNotification({ error: 'Passwords do not watch' }, 5),\n          )\n          return\n      }\n      try {\n        handleRegister(values.username, values.password, values.name)\n        resetForm()\n      } catch (err) {\n        console.error(err)\n      }\n    },\n  });\n\n\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n    <Stack spacing={3} bg=\"gray.200\"\n    w='350px'\n    p={5}\n    boxShadow='m'\n    rounded='lg'>\n      <Center>\n\t\t\t\t<UseAnimations animation={satisfied}  size={50}  strokeColor=\"gray\"/>\n\t\t\t\t</Center>\n      <FormControl isRequired >\n      <InputGroup>\n          <InputLeftElement children={<IoIosPersonAdd/>} />\n          <Input \n            type='text' name='name' \n            placeholder='Name' \n            area-label='name' \n            onChange={formik.handleChange} \n            value={formik.values.name}\n            bg='white'\n            />\n        </InputGroup>\n      </FormControl>\n      <FormControl isRequired >\n        <InputGroup>\n          <InputLeftElement children={<BiUserCircle/>} />\n          <Input \n            type='text' name='username' \n            placeholder='username' \n            area-label='username' \n            onChange={formik.handleChange} \n            value={formik.values.username}\n            bg='white'\n            />\n        </InputGroup>\n      </FormControl>\n      <FormControl isRequired >\n        <InputGroup>\n          <InputLeftElement children={<FcLock/>} />\n          <Input\n            type='password'\n            placeholder='Password'\n            aria-label='Password'\n            name='password'\n            onChange={formik.handleChange}\n            value={formik.values.password}\n            bg='white'\n          />\n        </InputGroup>\n      </FormControl>\n        <FormControl isRequired>\n\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t<InputLeftElement children={<FcLock />} />\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tname='confirmPassword'\n\t\t\t\t\t\t\tplaceholder='confirm password'\n\t\t\t\t\t\t\taria-label='confirmPassword'\n              onChange={formik.handleChange} \n              value={formik.values.confirmPassword}\n\t\t\t\t\t\t\tbg='white'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t</FormControl>\n      <Button\n        type='submit'\n        boxShadow='sm'\n        _hover={{ boxShadow: 'md' }}\n        _active={{ boxShadow: 'lg' }}\n        width=\"100\"\n        >\n        Sign up\n      </Button>\n      <Text fontSize=\"sm\" textAlign=\"center\" color=\"gray.400\">Created by Jarryingnut 👨‍💻</Text>\n\n      \n      \n    </Stack>\n  </form>\n  )\n  \n}\n\nexport default RegisterForm\nRegisterForm.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n}\n","import React from 'react'\nimport RegisterForm from './RegisterForm'\nimport Notification from './Notification'\nimport { useDispatch } from 'react-redux'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { registerUser } from '../reducers/loginReducer'\nimport { useHistory } from 'react-router-dom'\nimport {VStack, Heading} from '@chakra-ui/react'\n\n\nconst RegisterPage = () => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n\n      const handleRegister = async (username, password, name) => {\n        if (!username || username === '' || !password || password === '' || name === '') {\n          console.log('something went wrong')\n          dispatch(\n            setNotification({ error: 'Please fill in username and password' }, 5),\n          )\n          return\n        }\n    \n        try {\n          await dispatch(registerUser(username, password, name))\n    \n          history.push('/')\n    \n          // set notification message\n          dispatch(\n            setNotification(\n              {\n                notification: `${username} succesfully registered`,\n              },\n              5,\n            ),\n          )\n        } catch (err) {\n          // set error message\n          dispatch(\n            setNotification(\n              {\n                error: 'user already exists or something went wrong',\n              },\n              5,\n            ),\n          )\n          console.error(err)\n        }\n      }\n\n    return (\n        <>\n            <VStack justify='center' align='center' w='100%' h='93vh' spacing=\"3\" color=\"gray.600\">\n            <Heading mb=\"5\" size=\"lg\" fontWeight=\"semibold\">Create a new account</Heading>\n            <RegisterForm handleRegister={handleRegister}/>\n            <Notification w=\"350px\"/>\n            </VStack>\n        </>\n    )\n}\n\nexport default RegisterPage\n","import userService from '../services/users'\n\nconst userReducer = (state = [], action) => {\n  console.log('state now: ', state)\n  console.log('action', action)\n\n  switch (action.type) {\n    case 'INIT_USERS':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async (dispatch) => {\n    const users = await userService.getAll()\n    dispatch({\n      type: 'INIT_USERS',\n      data: users,\n    })\n  }\n}\n\n\n\nexport default userReducer\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { logout } from '../reducers/loginReducer'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport {Flex, Box, Spacer, Button, Text, Image, ButtonGroup} from '@chakra-ui/react'\n\nconst Navbar = () => {\n    const user = useSelector(state => state.login) \n\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const handleLogout = () => {\n        window.localStorage.removeItem('loggedInBloglistUser')\n        dispatch(logout())\n        history.push('/')\n    }\n\n    const handlesignup = () => {\n        window.localStorage.removeItem('loggedInBloglistUser')\n        dispatch(logout())\n        history.push('/signup')\n    }\n\n    if(user){\n        return (\n           \n            <Flex  align=\"center\" px=\"40\"  bg=\"gray.200\" py=\"1.5\" color=\"gray.600\" \n            >\n                <Box px=\"2\">\n                    <NavLink to=\"/\"><Image w='140px' src='/gigapost.png' alt='Logo' /></NavLink>\n                \n                </Box>\n                <Box px=\"2\"> \n                <Text size=\"sm\" fontWeight=\"semibold\" _hover={{ color: 'orange.400' }}><NavLink to=\"/blogs\" >Blogs</NavLink></Text>\n                </Box>\n                <Box px=\"2\"> \n                <Text size=\"sm\" fontWeight=\"semibold\" _hover={{ color: 'orange.400' }}><NavLink to=\"/users\">Users</NavLink></Text>\n                </Box>\n                <Spacer />\n                <Flex  alignItems=\"center\">\n                    \n                    <Text size=\"sm\" fontWeight=\"semibold\" mr=\"4\">{`${user.name} logged in `}</Text>\n                    \n                    <Button px=\"2\" colorScheme=\"blue\" onClick={handleLogout} size=\"sm\" variant=\"outline\" borderRadius=\"sm\">Logout</Button>\n                </Flex>\n            </Flex>\n        )\n    } else {\n        return (\n        <Flex align=\"center\" px=\"20\"  bg=\"gray.200\" py=\"1.5\">\n        <Box  px=\"2\">\n        <NavLink to=\"/\"><Image w='140px' src='/gigapost.png' alt='Logo' size=\"l\"/></NavLink>\n        </Box>\n        <Spacer />\n        <ButtonGroup variant=\"outline\" spacing=\"6\" size=\"sm\" colorScheme=\"telegram\" border=\"none\" color=\"gray.600\">\n            <Button onClick={handlesignup} borderRadius=\"sm\">\n            Sign Up\n            </Button>\n            <Button onClick={handleLogout} borderRadius=\"sm\">Log in</Button>\n        </ButtonGroup>\n        </Flex>\n        \n        )\n    }\n}\n\nexport default Navbar\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport blogService from './services/blogs'\nimport { initializeBlogs } from './reducers/blogReducer'\nimport LoginPage from './components/LoginPage'\nimport HomePage from './components/HomePage'\nimport UsersPage from './components/UsersPage'\nimport User from './components/User'\nimport BlogView from './components/BlogView'\nimport RegisterPage from './components/RegisterPage'\nimport { initializeUsers } from './reducers/userReducer'\nimport Navbar from './components/Navbar'\n\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n    dispatch(initializeUsers())\n  }, [dispatch])\n\n  const user = useSelector(state => state.login)\n\n  //check if user is in local storage\nuseEffect(() => {\n    const loggedInUserJSON = JSON.parse(\n      window.localStorage.getItem('loggedInBloglistUser'),\n    )\n    if (loggedInUserJSON) {\n      const user = loggedInUserJSON\n      blogService.setToken(user?.token)\n    }\n  }, [])\n\n  useEffect(() => {\n    window.localStorage.setItem('loggedInBloglistUser', JSON.stringify(user))\n    blogService.setToken(user?.token)\n  }, [user])\n\n\n  return (\n    <>\n      <Navbar/>\n        <main>\n            <Switch>\n\n              <Route path=\"/users/:id\" component={User} />\n              <Route path=\"/blogs/:id\" component={BlogView} />\n              <Route path=\"/login\" exact render={() => (user ? <Redirect to=\"/\"/> : <LoginPage/>)}/>\n              <Route path=\"/signup\" exact render={() => (user ? <Redirect to=\"/\"/> : <RegisterPage/>)} />\n              <Route path=\"/users\" exact component={UsersPage} />\n              <Route\n                path=\"/\"\n                render={() => (user ? <HomePage /> : <Redirect to=\"/login\" />)}\n              />\n            </Switch>\n        </main>\n    </>\n  )\n}\n\nexport default App","import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport blogReducer from './reducers/blogReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport loginReducer from './reducers/loginReducer'\nimport userReducer from './reducers/userReducer'\n\n\nconst reducer = combineReducers({\n    blogs: blogReducer,\n    notification: notificationReducer,\n    login: loginReducer,\n    users: userReducer,\n  })\n\nexport const store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk)),\n)\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport App from './App'\nimport {store} from './store'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\n\n\nReactDOM.render(\n    <ChakraProvider >\n\n    <Provider store={store}>\n                <Router>\n\n                    <App />\n\n                </Router>\n    </Provider>\n    </ChakraProvider >\n\n, document.getElementById('root'))"],"sourceRoot":""}